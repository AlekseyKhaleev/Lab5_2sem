#pragma once

#include <iostream>
#include <string>


class SyntaxException : public ::std::runtime_error {
    /*****************************************************************************************************************
    * Назначение: Создание исключения, связанного с аргументами командной строки
    * Исходные данные:
     *  std::runtime_error - базовый класс
    * Вызываемые модули: <string>, <stdexcept>
    * Описание класса:
    * Класс наследуется от std::runtime_error. Такое наследование необходимо для обеспечения возможности родительского
    * метода .what() получать строку типа string в качестве аргумента.
    * В классе определены две закрытые (private) целочисленные переменные:
    *   type - предназначена для хранения типа ошибки
    *   argc - предназначена для хранения количества пользовательских аргументов командной строки, полученных программой
    * Класс имеет один метод: description(), предназначенный для вывода сообщения о типе ошибки и минимальной справки
    * Класс имеет один конструктор, принимающий:
    *   message - описание ошибки
    *   type - тип ошибки
    *   argc - количество пользовательских аргументов главного модуля
    * Инициализация:
    *   Описание ошибки (тип string) передается в родительский метод what(), целочисленные значения типа ошибки
    *  и количества пользовательских аргументов присваиваются соответствующим закрытым переменным.
    * Дата: 15 / 05 / 2022 Версия 1.01
    * Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
    * Исправления: нет
    *****************************************************************************************************************/
public:
    explicit SyntaxException(const std::string &message, int type, int argc);

    void description();

private:
    int _type;
    int _argc;
};

